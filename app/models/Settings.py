# Settings.py

from app import db
from app.models.ConditionName import ConditionName

class Settings(db.Model):
    __tablename__ = 'settings'

    id = db.Column(db.Integer, primary_key=True)
    abilities = db.Column(db.Boolean, nullable=False)
    ability_numbers = db.Column(db.Boolean, nullable=False)
    ability_reveal = db.Column(db.Boolean, nullable=False)
    active_apply_conditions = db.Column(db.Boolean, nullable=False)
    active_apply_conditions_auto = db.Column(db.List(ConditionName), nullable=False)
    active_apply_conditions_excludes = db.Column(db.List(ConditionName), nullable=False)
    active_standees = db.Column(db.Boolean, nullable=False)
    active_summons = db.Column(db.Boolean, nullable=False)
    add_all_monsters = db.Column(db.Boolean, nullable=False)
    ally_attack_modifier_deck = db.Column(db.Boolean, nullable=False)
    always_fh_advantage = db.Column(db.Boolean, nullable=False)
    always_fh_solo = db.Column(db.Boolean, nullable=False)
    always_hazardous_terrain = db.Column(db.Boolean, nullable=False)
    always_loot_apply_dialog = db.Column(db.Boolean, nullable=False)
    always_loot_deck = db.Column(db.Boolean, nullable=False)
    am_advantage = db.Column(db.Boolean, nullable=False)
    am_advantage_house_rule = db.Column(db.Boolean, nullable=False)
    apply_building_rewards = db.Column(db.Boolean, nullable=False)
    apply_conditions = db.Column(db.Boolean, nullable=False)
    apply_conditions_excludes = db.Column(db.List(ConditionName), nullable=False)
    apply_long_rest = db.Column(db.Boolean, nullable=False)
    apply_loot = db.Column(db.Boolean, nullable=False)
    apply_loot_random_item = db.Column(db.Boolean, nullable=False)
    apply_retirement = db.Column(db.Boolean, nullable=False)
    automatic_pass_time = db.Column(db.Boolean, nullable=False)
    automatic_standees = db.Column(db.Boolean, nullable=False)
    automatic_standees_dialog = db.Column(db.Boolean, nullable=False)
    automatic_unlocking = db.Column(db.Boolean, nullable=False)
    battle_goals = db.Column(db.Boolean, nullable=False)
    battle_goals_character = db.Column(db.Boolean, nullable=False)
    battle_goals_fh = db.Column(db.Boolean, nullable=False)
    battle_goals_reminder = db.Column(db.Boolean, nullable=False)
    bb_am = db.Column(db.Boolean, nullable=False)
    bb_chars = db.Column(db.Boolean, nullable=False)
    bb_standee_limit = db.Column(db.Boolean, nullable=False)
    calculate = db.Column(db.Boolean, nullable=False)
    calculate_stats = db.Column(db.Boolean, nullable=False)
    calculate_shield_stats = db.Column(db.Boolean, nullable=False)
    character_attack_modifier_deck = db.Column(db.Boolean, nullable=False)
    character_hand_size = db.Column(db.Boolean, nullable=False)
    character_identities = db.Column(db.Boolean, nullable=False)
    character_identity_hint = db.Column(db.Boolean, nullable=False)
    character_items = db.Column(db.Boolean, nullable=False)
    character_items_apply = db.Column(db.Boolean, nullable=False)
    character_sheet = db.Column(db.Boolean, nullable=False)
    character_shield_retaliate = db.Column(db.Boolean, nullable=False)
    character_sort_index = db.Column(db.Boolean, nullable=False)
    character_traits = db.Column(db.Boolean, nullable=False)
    combine_interactive_abilities = db.Column(db.Boolean, nullable=False)
    combine_summon_action = db.Column(db.Boolean, nullable=False)
    damage_hp = db.Column(db.Boolean, nullable=False)
    disabled_turn_confirmation = db.Column(db.Boolean, nullable=False)
    disable_sort_figures = db.Column(db.Boolean, nullable=False)
    disable_standees = db.Column(db.Boolean, nullable=False)
    edition_data_urls = db.Column(db.List(db.String), nullable=False)
    editions = db.Column(db.List(db.String), nullable=False)
    elite_first = db.Column(db.Boolean, nullable=False)
    exclude_edition_data_urls = db.Column(db.List(db.String), nullable=False)
    expire_conditions = db.Column(db.Boolean, nullable=False)
    fh_challenges = db.Column(db.Boolean, nullable=False)
    fh_gh_items = db.Column(db.Boolean, nullable=False)
    hide_absent = db.Column(db.Boolean, nullable=False)
    hide_stats = db.Column(db.Boolean, nullable=False)
    initiative_required = db.Column(db.Boolean, nullable=False)
    interactive_abilities = db.Column(db.Boolean, nullable=False)
    locale = db.Column(db.String(2), nullable=False)
    loot_deck = db.Column(db.Boolean, nullable=False)
    max_undo = db.Column(db.Integer, nullable=False)
    monsters = db.Column(db.Boolean, nullable=False)
    monster_attack_modifier_deck = db.Column(db.Boolean, nullable=False)
    move_elements = db.Column(db.Boolean, nullable=False)
    party_sheet = db.Column(db.Boolean, nullable=False)
    random_standees = db.Column(db.Boolean, nullable=False)
    remove_unused_monster = db.Column(db.Boolean, nullable=False)
    scenario_number_input = db.Column(db.Boolean, nullable=False)
    scenario_rewards = db.Column(db.Boolean, nullable=False)
    scenario_rewards_items = db.Column(db.Boolean, nullable=False)
    scenario_rooms = db.Column(db.Boolean, nullable=False)
    scenario_rules = db.Column(db.Boolean, nullable=False)
    scenario_rules_autoapply = db.Column(db.Boolean, nullable=False)
    show_expanded_ability_card = db.Column(db.Boolean, nullable=False)
    show_full_ability_card = db.Column(db.Boolean, nullable=False)
    sort_figures = db.Column(db.Boolean, nullable=False)
    spoilers = db.Column(db.List(db.String), nullable=False)
    standees = db.Column(db.Boolean, nullable=False)
    standee_shield_retaliate = db.Column(db.Boolean, nullable=False)
    standee_stats = db.Column(db.Boolean, nullable=False)
    stats = db.Column(db.Boolean, nullable=False)
    summons = db.Column(db.Boolean, nullable=False)
    treasures = db.Column(db.Boolean, nullable=False)
    treasures_loot = db.Column(db.Boolean, nullable=False)
    treasures_loot_item = db.Column(db.Boolean, nullable=False)
    treasures_loot_scenario = db.Column(db.Boolean, nullable=False)
    turn_confirmation = db.Column(db.Boolean, nullable=False)
    unlock_envelope_buildings = db.Column(db.Boolean, nullable=False)